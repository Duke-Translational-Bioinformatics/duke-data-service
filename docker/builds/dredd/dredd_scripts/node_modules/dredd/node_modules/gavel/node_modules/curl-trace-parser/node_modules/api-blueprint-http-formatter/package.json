{
  "name": "api-blueprint-http-formatter",
  "version": "0.0.1",
  "description": "Format pair of HTTP Request and Response to API Blueprint format",
  "main": "lib/api-blueprint-http-formatter.js",
  "scripts": {
    "test": "scripts/test",
    "prepublish": "scripts/prepublish"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/apiaryio/api-blueprint-http-formatter"
  },
  "dependencies": {},
  "devDependencies": {
    "coffee-script": "1.6.3",
    "mocha": "1.11.0",
    "chai": "1.7.1",
    "protagonist": "0.1.0"
  },
  "keywords": [
    "api",
    "blueprint",
    "http"
  ],
  "author": {
    "name": "Adam Kliment",
    "email": "adam@apiary.io"
  },
  "license": "MIT",
  "readme": "# HTTP API Blueprint formater\n\n[![Build Status](https://travis-ci.org/apiaryio/api-blueprint-http-formatter.png)](https://travis-ci.org/apiaryio/api-blueprint-http-formatter)\n[![Dependency Status](https://david-dm.org/apiaryio/api-blueprint-http-formatter.png)](https://david-dm.org/apiaryio/api-blueprint-http-formatter)\n[![devDependency Status](https://david-dm.org/apiaryio/api-blueprint-http-formatter/dev-status.png)](https://david-dm.org/apiaryio/api-blueprint-http-formatter#info=devDependencies)\n\n\n## Usage\n\nIt accepts object with `request` and `response` keys in format used by [Gavel](https://github.com/apiaryio/gavel) and returns it back in [API Blueprint format](http://apiblueprint.org)\n\n- [Request format](https://www.relishapp.com/apiary/gavel/v/1-0/docs/data-model#http-request)\n- [Response format](https://www.relishapp.com/apiary/gavel/v/1-0/docs/data-model#http-response)\n\n\n# Example usage\n\n```javascript\nvar bf = require('./src/api-blueprint-http-formatter');\nvar post = {\n  \"request\": {\n    \"method\": \"POST\",\n    \"uri\": \"/shopping-cart\",\n    \"headers\": {\n      \"User-Agent\": \"curl/7.24.0 (x86_64-apple-darwin12.0) libcurl/7.24.0 OpenSSL/0.9.8x zlib/1.2.5\",\n      \"Host\": \"curltraceparser.apiary.io\",\n      \"Accept\": \"*/*\",\n      \"Content-Type\": \"application/json\",\n      \"Content-Length\": \"39\"\n    },\n    \"body\": \"{ \\\"product\\\":\\\"1AB23ORM\\\", \\\"quantity\\\": 2 }\"\n  },\n  \"response\": {\n    \"statusCode\": \"201\",\n    \"statusMessage\": \"Created\",\n    \"headers\": {\n      \"Content-Type\": \"application/json\",\n      \"Date\": \"Sun, 21 Jul 2009 14:51:09 GMT\",\n      \"X-Apiary-Ratelimit-Limit\": \"120\",\n      \"X-Apiary-Ratelimit-Remaining\": \"119\",\n      \"Content-Length\": \"50\",\n      \"Connection\": \"keep-alive\"\n    },\n    \"body\": \"{ \\\"status\\\": \\\"created\\\", \\\"url\\\": \\\"/shopping-cart/2\\\" }\"\n  }\n};\n\nblueprint = bf.format(post);\nconsole.log(blueprint);\n```\n\n## Output is a API Blueprint\n\n```\n# POST /shopping-cart\n+ Request\n    + Headers\n\n            User-Agent:curl/7.24.0 (x86_64-apple-darwin12.0) libcurl/7.24.0 OpenSSL/0.9.8x zlib/1.2.5\n            Host:curltraceparser.apiary.io\n            Accept:*/*\n            Content-Type:application/json\n            Content-Length:39\n\n    + Body\n\n            { \"product\":\"1AB23ORM\", \"quantity\": 2 }\n\n+ Response 201\n    + Headers\n\n            Content-Type:application/json\n            Date:Sun, 21 Jul 2009 14:51:09 GMT\n            X-Apiary-Ratelimit-Limit:120\n            X-Apiary-Ratelimit-Remaining:119\n            Content-Length:50\n            Connection:keep-alive\n\n    + Body\n\n            { \"status\": \"created\", \"url\": \"/shopping-cart/2\" }\n\n```\n\nUse [Protagoinst](https://github.com/apiaryio/protagonist), Api Blueprint Node.js parser to parse or canonical [Snowcrash](https://github.com/apiaryio/snowcrash) parser to get Blueprint AST\n\n## API Reference\n\n`format(pair)` - returns string with message pair in API blueprint format\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/apiaryio/api-blueprint-http-formatter/issues"
  },
  "_id": "api-blueprint-http-formatter@0.0.1",
  "_from": "api-blueprint-http-formatter@0.0.1"
}
