{
  "name": "markdown-it",
  "version": "5.1.0",
  "description": "Markdown-it - modern pluggable markdown parser.",
  "keywords": [
    "markdown",
    "parser",
    "commonmark",
    "markdown-it",
    "markdown-it-plugin"
  ],
  "homepage": "https://github.com/markdown-it/markdown-it",
  "repository": {
    "type": "git",
    "url": "git://github.com/markdown-it/markdown-it"
  },
  "license": "MIT",
  "main": "index.js",
  "bin": {
    "markdown-it": "bin/markdown-it.js"
  },
  "scripts": {
    "test": "make test"
  },
  "files": [
    "index.js",
    "bin/",
    "lib/",
    "dist/"
  ],
  "dependencies": {
    "argparse": "~1.0.3",
    "entities": "~1.1.1",
    "linkify-it": "~1.2.0",
    "mdurl": "~1.0.1",
    "uc.micro": "^1.0.0"
  },
  "devDependencies": {
    "ansi": "~0.3.0",
    "autolinker": "^0.18.1",
    "autoprefixer-stylus": "~0.8.1",
    "benchmark": "~1.0.0",
    "browserify": "*",
    "chai": "^3.4.1",
    "commonmark": "~0.23.0",
    "coveralls": "~2.11.6",
    "eslint": "0.24.0",
    "eslint-plugin-nodeca": "^1.0.0",
    "istanbul": "*",
    "jade": "~1.11.0",
    "markdown-it-abbr": "^1.0.2",
    "markdown-it-container": "^2.0.0",
    "markdown-it-deflist": "^2.0.0",
    "markdown-it-emoji": "^1.0.0",
    "markdown-it-footnote": "^2.0.0",
    "markdown-it-for-inline": "~0.1.0",
    "markdown-it-ins": "^2.0.0",
    "markdown-it-mark": "^2.0.0",
    "markdown-it-sub": "^1.0.0",
    "markdown-it-sup": "^1.0.0",
    "markdown-it-testgen": "~0.1.3",
    "marked": "0.3.5",
    "stylus": "~0.53.0",
    "mocha": "*",
    "uglify-js": "*"
  },
  "readme": "# markdown-it\n\n[![Build Status](https://img.shields.io/travis/markdown-it/markdown-it/master.svg?style=flat)](https://travis-ci.org/markdown-it/markdown-it)\n[![NPM version](https://img.shields.io/npm/v/markdown-it.svg?style=flat)](https://www.npmjs.org/package/markdown-it)\n[![Coverage Status](https://coveralls.io/repos/markdown-it/markdown-it/badge.svg?branch=master&service=github)](https://coveralls.io/github/markdown-it/markdown-it?branch=master)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/markdown-it/markdown-it)\n\n> Markdown parser done right. Fast and easy to extend.\n\n__[Live demo](https://markdown-it.github.io)__\n\n- Follows the __[CommonMark spec](http://spec.commonmark.org/)__ + adds syntax extensions & sugar (URL autolinking, typographer).\n- Configurable syntax! You can add new rules and even replace existing ones.\n- High speed.\n- [Safe](https://github.com/markdown-it/markdown-it/tree/master/docs/security.md) by default.\n- Community-written __[plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin)__ and [other packages](https://www.npmjs.org/browse/keyword/markdown-it) on npm.\n\n__Table of content__\n\n- [Install](#install)\n- [Usage examples](#usage-examples)\n- [API](#api)\n- [Syntax extensions](#syntax-extensions)\n- [Benchmark](#benchmark)\n- [Authors](#authors)\n- [References / Thanks](#references--thanks)\n- [License](#license)\n\n## Install\n\n**node.js** & **bower**:\n\n```bash\nnpm install markdown-it --save\nbower install markdown-it --save\n```\n\n**browser (CDN):**\n\n- [jsDeliver CDN](http://www.jsdelivr.com/#!markdown-it \"jsDelivr CDN\")\n- [cdnjs.com CDN](https://cdnjs.com/libraries/markdown-it \"cdnjs.com\")\n\n\n## Usage examples\n\nSee also:\n\n- __[API documentation](https://markdown-it.github.io/markdown-it/)__ - for more\n  info and examples.\n- [Development info](https://github.com/markdown-it/markdown-it/tree/master/docs) -\n  for plugins writers.\n\n\n### Simple\n\n```js\n// node.js, \"classic\" way:\nvar MarkdownIt = require('markdown-it'),\n    md = new MarkdownIt();\nvar result = md.render('# markdown-it rulezz!');\n\n// node.js, the same, but with sugar:\nvar md = require('markdown-it')();\nvar result = md.render('# markdown-it rulezz!');\n\n// browser without AMD, added to \"window\" on script load\n// Note, there is no dash in \"markdownit\".\nvar md = window.markdownit();\nvar result = md.render('# markdown-it rulezz!');\n```\n\nSingle line rendering, without paragraph wrap:\n\n```js\nvar md = require('markdown-it')();\nvar result = md.renderInline('__markdown-it__ rulezz!');\n```\n\n\n### Init with presets and options\n\n(*) presets define combinations of active rules and options. Can be\n`\"commonmark\"`, `\"zero\"` or `\"default\"` (if skipped). See\n[API docs](https://markdown-it.github.io/markdown-it/#MarkdownIt.new) for more details.\n\n```js\n// commonmark mode\nvar md = require('markdown-it')('commonmark');\n\n// default mode\nvar md = require('markdown-it')();\n\n// enable everything\nvar md = require('markdown-it')({\n  html: true,\n  linkify: true,\n  typographer: true\n});\n\n// full options list (defaults)\nvar md = require('markdown-it')({\n  html:         false,        // Enable HTML tags in source\n  xhtmlOut:     false,        // Use '/' to close single tags (<br />).\n                              // This is only for full CommonMark compatibility.\n  breaks:       false,        // Convert '\\n' in paragraphs into <br>\n  langPrefix:   'language-',  // CSS language prefix for fenced blocks. Can be\n                              // useful for external highlighters.\n  linkify:      false,        // Autoconvert URL-like text to links\n\n  // Enable some language-neutral replacement + quotes beautification\n  typographer:  false,\n\n  // Double + single quotes replacement pairs, when typographer enabled,\n  // and smartquotes on. Could be either a String or an Array.\n  //\n  // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n  // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n  quotes: '“”‘’',\n\n  // Highlighter function. Should return escaped HTML,\n  // or '' if the source string is not changed and should be escaped externaly.\n  // If result starts with <pre... internal wrapper is skipped.\n  highlight: function (/*str, lang*/) { return ''; }\n});\n```\n\n### Plugins load\n\n```js\nvar md = require('markdown-it')()\n            .use(plugin1)\n            .use(plugin2, opts, ...)\n            .use(plugin3);\n```\n\n\n### Syntax highlighting\n\nApply syntax highlighting to fenced code blocks with the `highlight` option:\n\n```js\nvar hljs = require('highlight.js') // https://highlightjs.org/\n\n// Actual default values\nvar md = require('markdown-it')({\n  highlight: function (str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return hljs.highlight(lang, str).value;\n      } catch (__) {}\n    }\n\n    return ''; // use external default escaping\n  }\n});\n```\n\nOr with full wrapper override (if you need assign class to \\<pre>):\n\n```js\nvar hljs = require('highlight.js') // https://highlightjs.org/\n\n// Actual default values\nvar md = require('markdown-it')({\n  highlight: function (str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return '<pre class=\"hljs\"><code>' +\n               hljs.highlight(lang, str).value +\n               '</code></pre>';\n      } catch (__) {}\n    }\n\n    return '<pre class=\"hljs\"><code>' + md.utils.esccapeHtml(str) + '</code></pre>';\n  }\n});\n```\n\n### Linkify\n\n`linkify: true` uses [linkify-it](https://github.com/markdown-it/linkify-it). To\nconfigure linkify-it, access the linkify instance through `md.linkify`:\n\n```js\nmd.linkify.tlds('.py', false);  // disables .py as top level domain\n```\n\n\n## API\n\n__[API documentation](https://markdown-it.github.io/markdown-it/)__\n\nIf you are going to write plugins - take a look at\n[Development info](https://github.com/markdown-it/markdown-it/tree/master/docs).\n\n\n## Syntax extensions\n\nEmbedded (enabled by default):\n\n- [Tables](https://help.github.com/articles/github-flavored-markdown/#tables) (GFM)\n- [Strikethrough](https://help.github.com/articles/github-flavored-markdown/#strikethrough) (GFM)\n\nVia plugins:\n\n- [subscript](https://github.com/markdown-it/markdown-it-sub)\n- [superscript](https://github.com/markdown-it/markdown-it-sup)\n- [footnote](https://github.com/markdown-it/markdown-it-footnote)\n- [definition list](https://github.com/markdown-it/markdown-it-deflist)\n- [abbreviation](https://github.com/markdown-it/markdown-it-abbr)\n- [emoji](https://github.com/markdown-it/markdown-it-emoji)\n- [custom container](https://github.com/markdown-it/markdown-it-container)\n- [insert](https://github.com/markdown-it/markdown-it-ins)\n- [mark](https://github.com/markdown-it/markdown-it-mark)\n- ... and [others](https://www.npmjs.org/browse/keyword/markdown-it-plugin)\n\n\n### Manage rules\n\nBy default all rules are enabled, but can be restricted by options. On plugin\nload all its rules are enabled automatically.\n\n```js\n// Activate/deactivate rules, with curring\nvar md = require('markdown-it')()\n            .disable([ 'link', 'image' ])\n            .enable([ 'link' ])\n            .enable('image');\n\n// Enable everything\nmd = require('markdown-it')('full', {\n  html: true,\n  linkify: true,\n  typographer: true,\n});\n```\n\n\n## Benchmark\n\nHere is the result of readme parse at MB Pro Retina 2013 (2.4 GHz):\n\n```bash\n$ benchmark/benchmark.js readme\nSelected samples: (1 of 28)\n > README\n\nSample: README.md (7774 bytes)\n > commonmark-reference x 1,222 ops/sec ±0.96% (97 runs sampled)\n > current x 743 ops/sec ±0.84% (97 runs sampled)\n > current-commonmark x 1,568 ops/sec ±0.84% (98 runs sampled)\n > marked-0.3.2 x 1,587 ops/sec ±4.31% (93 runs sampled)\n```\n\n__Note.__ CommonMark version runs with [simplified link normalizers](https://github.com/markdown-it/markdown-it/blob/master/benchmark/implementations/current-commonmark/index.js)\nfor more \"honest\" compare. Difference is ~ 1.5x.\n\nAs you can see, `markdown-it` doesn't pay with speed for it's flexibility.\nSlowdown of \"full\" version caused by additional features not available in\nother implementations.\n\n\n## Authors\n\n- Alex Kocharin [github/rlidwka](https://github.com/rlidwka)\n- Vitaly Puzrin [github/puzrin](https://github.com/puzrin)\n\n_markdown-it_ is the result of the decision of the authors who contributed to\n99% of the _Remarkable_ code to move to a project with the same authorship but\nnew leadership (Vitaly and Alex). It's not a fork.\n\n## References / Thanks\n\nBig thanks to [John MacFarlane](https://github.com/jgm) for his work on the\nCommonMark spec and reference implementations. His work saved us a lot of time\nduring this project's development.\n\n**Related Links:**\n\n- https://github.com/jgm/CommonMark - reference CommonMark implementations in C & JS,\n  also contains latest spec & online demo.\n- http://talk.commonmark.org - CommonMark forum, good place to collaborate\n  developers' efforts.\n\n**Ports**\n\n- [motion-markdown-it](https://github.com/digitalmoksha/motion-markdown-it) - Ruby/RubyMotion\n\n\n## License\n\n[MIT](https://github.com/markdown-it/markdown-it/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/markdown-it/markdown-it/issues"
  },
  "_id": "markdown-it@5.1.0",
  "dist": {
    "shasum": "23dacee9ce4c55b8491fcab70e34f071e44dad6c"
  },
  "_from": "markdown-it@^5.0.2",
  "_resolved": "https://registry.npmjs.org/markdown-it/-/markdown-it-5.1.0.tgz"
}
