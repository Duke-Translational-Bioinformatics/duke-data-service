{
  "version": "0.1.1",
  "name": "stream-transform",
  "description": "Object transformations implementing the Node.js `stream.Transform` API",
  "keywords": [
    "stream",
    "transform",
    "csv",
    "object"
  ],
  "license": "BSD-3-Clause",
  "repository": {
    "type": "git",
    "url": "http://www.github.com/wdavidw/node-stream-transform"
  },
  "homepage": "http://csv.adaltas.com/transform/",
  "dependencies": {},
  "devDependencies": {
    "coffee-script": "latest",
    "pad": "latest",
    "mocha": "latest",
    "csv-generate": "latest",
    "should": "latest"
  },
  "optionalDependencies": {},
  "main": "./lib",
  "scripts": {
    "coffee": "./node_modules/.bin/coffee -b -o lib src",
    "pretest": "./node_modules/.bin/coffee -b -o lib src",
    "test": "NODE_ENV=test ./node_modules/.bin/mocha --compilers coffee:coffee-script/register --reporter dot"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/wdavidw/node-csv-parse.png)][travis]\n\nPart of the [CSV module][csv_home], this project is a simple object\ntransformation framework. It implements the Node.js [`stream.Transform` API][streamtransform].  \nIt also provides a simple callback-based API for convenience.  \nIt is both extremely easy to use and powerful.\n\n[Documentation for the \"csv-parse\" package is available here][home].\n\n## Features\n\n*   Follow the Node.js [streaming API][streamtransform]\n*   Simplicity with the optional callback API\n*   Synchronous and asynchronous user handler functions\n*   Accepts arrays of strings, or arrays of objects as input\n*   Sequential or user-defined concurrent execution\n*   Skip and create new records\n*   Alter or clone input data\n*   BSD License\n\nUsage\n-----\n\nRefer to the [project webpage][home] for [an exhaustive list of options][home]\nand [some usage examples][examples]. \n\nThe module is built on the Node.js Stream API. For the sake of simplify, a\nsimple callback API is also provided. To give you a quick look, here's an\nexample of the callback API:\n\n```javascript\nvar transform = require('stream-transform');\n\ninput = [ [ '1', '2', '3', '4' ], [ 'a', 'b', 'c', 'd' ] ];\ntransform(input, function(data){\n  data.push(data.shift());\n  return data.join(',')+'\\n';\n}, function(err, output){\n  output.should.eql([ '2,3,4,1\\n', 'b,c,d,a\\n' ]);\n});\n```\n\nDevelopment\n-----------\n\nTests are executed with mocha. To install it, simple run `npm install` \nfollowed by `npm test`. It will install mocha and its dependencies in your \nproject \"node_modules\" directory and run the test suite. The tests run \nagainst the CoffeeScript source files.\n\nTo generate the JavaScript files, run `npm run coffee`.\n\nThe test suite is run online with [Travis][travis] against the versions \n0.10, 0.11 and 0.12 of Node.js.\n\n\n[streamtransform]: http://nodejs.org/api/stream.html#stream_class_stream_transform\n[home]: http://csv.adaltas.com/transform/\n[examples]: http://csv.adaltas.com/transform/examples/\n[csv_home]: https://github.com/wdavidw/node-csv\n[stream-samples]: https://github.com/wdavidw/node-stream-transform/tree/master/samples\n[stream-test]: https://github.com/wdavidw/node-stream-transform/tree/master/test\n[travis]: http://travis-ci.org/wdavidw/node-stream-transform\n\n",
  "readmeFilename": "README.md",
  "_id": "stream-transform@0.1.1",
  "_from": "stream-transform@^0.1.0"
}
