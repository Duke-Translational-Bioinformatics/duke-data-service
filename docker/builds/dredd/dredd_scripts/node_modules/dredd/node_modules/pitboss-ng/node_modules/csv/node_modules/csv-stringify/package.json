{
  "version": "0.0.8",
  "name": "csv-stringify",
  "description": "CSV stringifier implementing the Node.js `stream.Transform` API",
  "keywords": [
    "csv",
    "stringify",
    "stringifier"
  ],
  "license": "BSD-3-Clause",
  "repository": {
    "type": "git",
    "url": "http://www.github.com/wdavidw/node-csv-stringify"
  },
  "homepage": "http://csv.adaltas.com/stringify/",
  "dependencies": {},
  "devDependencies": {
    "coffee-script": "latest",
    "csv-generate": "latest",
    "mocha": "latest",
    "should": "latest"
  },
  "optionalDependencies": {},
  "main": "./lib",
  "scripts": {
    "coffee": "./node_modules/.bin/coffee -b -o lib src",
    "pretest": "./node_modules/.bin/coffee -b -o lib src",
    "test": "NODE_ENV=test ./node_modules/.bin/mocha --compilers coffee:coffee-script/register --reporter dot"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/wdavidw/node-csv-stringify.png)](http://travis-ci.org/wdavidw/node-csv-stringify)\n\nPart of the [CSV module][csv_home], this project is a stringifier converting\narrays or objects input into a CSV text. It implements the Node.js\n[`stream.Transform` API][stream_transform]. It also provides a simple\ncallback-based API for convenience. It is both extremely easy to use and\npowerful. It was first released in 2010 and is used against big data sets by a\nlarge community.\n\n[Documentation for the \"csv-stringify\" package is available here][home].\n\n## Features\n\n*   Follow the Node.js streaming API\n*   Simplicity with the optional callback API\n*   Support delimiters, quotes, escape characters and header\n*   Support big datasets\n*   Complete test coverage and samples for inspiration\n*   no external dependencies\n*   to be used conjointly with `csv-generate`, `csv-parse` and `stream-transform`\n*   BSD License\n\nUsage\n-----\n\nRefer to the [project webpage][home] for [an exhaustive list of options][home]\nand [some usage examples][examples]. \n\nThe module is built on the Node.js Stream API. For the sake of simplify, a\nsimple callback API is also provided. To give you a quick look, here's an\nexample of the callback API:\n\n```javascript\nvar stringify = require('csv-stringify');\n\ninput = [ [ '1', '2', '3', '4' ], [ 'a', 'b', 'c', 'd' ] ];\nstringify(input, function(err, output){\n  output.should.eql('1,2,3,4\\na,b,c,d');\n});\n```\n\nDevelopment\n-----------\n\nTests are executed with mocha. To install it, simple run `npm install` \nfollowed by `npm test`. It will install mocha and its dependencies in your \nproject \"node_modules\" directory and run the test suite. The tests run \nagainst the CoffeeScript source files.\n\nTo generate the JavaScript files, run `npm run coffee`.\n\nThe test suite is run online with [Travis][travis] against the versions \n0.10, 0.11 and 0.12 of Node.js.\n\nContributors\n------------\n\n*   David Worms: <https://github.com/wdavidw>\n\n[home]: http://csv.adaltas.com/stringify/\n[examples]: http://csv.adaltas.com/stringify/examples/\n[csv]: https://github.com/wdavidw/node-csv\n[travis]: https://travis-ci.org/#!/wdavidw/node-csv-stringify\n",
  "readmeFilename": "README.md",
  "_id": "csv-stringify@0.0.8",
  "_from": "csv-stringify@^0.0.8"
}
