import dredd_hooks as hooks
import imp
import os
import json
import uuid
#if you want to import another module for use in this workflow
utils = imp.load_source("utils",os.path.join(os.getcwd(),'utils.py'))

@hooks.before("Authorization Roles > Authorization Roles collection > List roles")
@hooks.before("Authorization Roles > Authorization Role instance > View role")
###############################################################################
###############################################################################
#           SOFTWARE AGENTS
###############################################################################
############################################################################### 
@hooks.before("Software Agents > Software Agents collection > Create software agent")
@hooks.before("Software Agents > Software Agents collection > List software agents")
@hooks.before("Software Agents > Software Agent instance > View software agent")
@hooks.before("Software Agents > Software Agent instance > Update software agent")
@hooks.before("Software Agents > Software Agent instance > Delete software agent")
@hooks.before("Software Agents > Software Agent API Key > Generate software agent API key")
@hooks.before("Software Agents > Software Agent API Key > View software agent API key")
@hooks.before("Software Agents > Software Agent API Key > Delete software agent API key")
@hooks.before("Software Agents > Software Agent Access Token > Get software agent access token")
def justPass(transaction):
    utils.pass_this_endpoint(transaction)
@hooks.after("Current User > Current User instance > View current user")
def get_current_user_id(transaction):
    global current_user_id
    current_user_id = json.loads(transaction[u'real'][u'body'])['id']
@hooks.before("Current User > Current User instance > Current user usage")
@hooks.before("Current User > Current User API Key > Generate current user API key")
@hooks.before("Current User > Current User API Key > View current user API key")
@hooks.before("Current User > Current User API Key > Delete current user API key")
@hooks.before("Users > Users collection > List users")
@hooks.before("Users > User instance > View user")
def justPass2(transaction):
    utils.pass_this_endpoint(transaction)   
###############################################################################
###############################################################################
#           SYSTEM PERMISSIONS
###############################################################################
###############################################################################  
@hooks.before("System Permissions > System Permissions collection > List system permissions")
@hooks.before("System Permissions > System Permission instance > Grant system permission")
@hooks.before("System Permissions > System Permission instance > View system permission")
@hooks.before("System Permissions > System Permission instance > Revoke system permission")
#Note: the DDS user generated by rake doesn't have permission for these 4 endpoints, need to request access if important
def skippy(transaction):
    utils.skip_this_endpoint(transaction)
###############################################################################
###############################################################################
#           PROJECTS
###############################################################################
############################################################################### 
@hooks.before("Projects > Projects collection > Create project")
def change_proj_name(transaction):
    name = str(uuid.uuid4())
    description = "Created by dredd under: Projects > Projects collection > Create project"
    requestBody = json.loads(transaction[u'request'][u'body'])
    requestBody['name'] = name
    requestBody['description'] = description
    transaction[u'request'][u'body'] = json.dumps(requestBody)
@hooks.after("Projects > Projects collection > Create project")
def set_project_id(transaction):
    global project_id
    json_trans = json.loads(transaction[u'real'][u'body'])
    project_id = json_trans['id']
@hooks.before("Projects > Projects collection > List projects")
@hooks.before("Projects > Project instance > View project")
def change_trans_id(transaction):
    print(transaction)
    url = transaction['fullPath']
    transaction['fullPath'] = str(url).replace('ca29f7df-33ca-46dd-a015-92c46fdb6fd1',project_id)
@hooks.before("Projects > Project instance > Update project")
def change_proj_name2(transaction):
    url = transaction['fullPath']
    transaction['fullPath'] = str(url).replace('ca29f7df-33ca-46dd-a015-92c46fdb6fd1',project_id)
    name = str(uuid.uuid4())
    description = "Created by dredd unders: Projects > Projects collection > Create project"
    requestBody = json.loads(transaction[u'request'][u'body'])
    requestBody['name'] = name
    requestBody['description'] = description
    transaction[u'request'][u'body'] = json.dumps(requestBody)
@hooks.before("Projects > Project instance > Delete project")
def create_a_del_project(transaction):
    name = str(uuid.uuid4())
    description = "Created by dredd under: Projects > Projects collection > Create project"
    neww = utils.create_a_project(transaction,name,description)
    url = transaction['fullPath']
    transaction['fullPath'] = str(url).replace('ca29f7df-33ca-46dd-a015-92c46fdb6fd1',neww['id'])
@hooks.before("Projects > Project instance > NOT_IMPLEMENTED Project usage")
def skippy3(transaction):
    utils.skip_this_endpoint(transaction)
###############################################################################
###############################################################################
#           PROJECT PERMISSIONS
###############################################################################
############################################################################### 
@hooks.before("Project Permissions > Project Permissions collection > List project permissions")
@hooks.before("Project Permissions > Project Permission instance > Grant project permission")
@hooks.before("Project Permissions > Project Permission instance > View project permission")
@hooks.before("Project Permissions > Project Permission instance > Revoke project permission")
@hooks.before("Project Roles > Project Roles collection > List project roles")
@hooks.before("Project Roles > Project Role instance > View project role")
@hooks.before("Affiliates > Affiliates collection > List affiliates")
@hooks.before("Affiliates > Affiliate instance > Associate affiliate")
@hooks.before("Affiliates > Affiliate instance > View affiliate")
@hooks.before("Affiliates > Affiliate instance > Delete affiliate")
@hooks.before("Storage Providers > Storage Providers collection > List storage providers")
@hooks.before("Storage Providers > Storage Provider instance > View storage provider")
@hooks.before("Folders > Folders collection > Create folder")
@hooks.before("Folders > Folder instance > View folder")
@hooks.before("Folders > Folder instance > Delete folder")
@hooks.before("Folders > Folder instance > Move folder")
@hooks.before("Folders > Folder instance > Rename folder")
@hooks.before("Uploads > Uploads collection > Initiate chunked upload")
@hooks.before("Uploads > Uploads collection > List chunked uploads")
@hooks.before("Uploads > Upload instance > View chunked upload")
@hooks.before("Uploads > Upload instance > Get pre-signed chunk URL")
@hooks.before("Uploads > Upload instance > Complete chunked file upload")
@hooks.before("Files > Files collection > Create file")
@hooks.before("Files > File instance > View file")
@hooks.before("Files > File instance > Update file")
@hooks.before("Files > File instance > Delete file")
@hooks.before("Files > File instance > Get file download URL")
@hooks.before("Files > File instance > Move file")
@hooks.before("Files > File instance > Rename file")
def justPass4(transaction):
    utils.pass_this_endpoint(transaction)
@hooks.before("File Versions > File Versions collection > List file versions")
@hooks.before("File Versions > File Version instance > View file version")
@hooks.before("File Versions > File Version instance > Update file version")
@hooks.before("File Versions > File Version instance > Delete file version")
@hooks.before("File Versions > File Version instance > Get file version download URL")
@hooks.before("Search Children > Search project children > Search project children")
@hooks.before("Search Children > Search folder children > Search folder children")
@hooks.before("Provenance Activities > Activities collection > NOT_IMPLEMENTED Create activity")
@hooks.before("Provenance Activities > Activities collection > NOT_IMPLEMENTED List activities")
@hooks.before("Provenance Activities > Activities instance > NOT_IMPLEMENTED View activity")
@hooks.before("Provenance Activities > Activities instance > NOT_IMPLEMENTED Update activity")
@hooks.before("Provenance Activities > Activities instance > NOT_IMPLEMENTED Delete activity")
@hooks.before("Provenance Relations > Relations collection > NOT_IMPLEMENTED Create used relation")
@hooks.before("Provenance Relations > Relations collection > NOT_IMPLEMENTED Create generated relation")
@hooks.before("Provenance Relations > Relations collection > NOT_IMPLEMENTED List provenance relations")
@hooks.before("Provenance Relations > Relation instance > NOT_IMPLEMENTED View relation")
@hooks.before("Provenance Relations > Relation instance > NOT_IMPLEMENTED Delete relation")
@hooks.before("Search Provenance > NOT_IMPLEMENTED Search Provenance > NOT_IMPLEMENTED Search Provenance")
@hooks.before("Tags > Tags collection > NOT_IMPLEMENTED Create object tag")
@hooks.before("Tags > Tags collection > NOT_IMPLEMENTED List object tags")
@hooks.before("Tags > Tags collection > NOT_IMPLEMENTED List tag labels")
@hooks.before("Tags > Tag instance > NOT_IMPLEMENTED View tag")
@hooks.before("Tags > Tag instance > NOT_IMPLEMENTED Delete tag")
def skippy4(transaction):
    utils.skip_this_endpoint(transaction)
