// Generated by CoffeeScript 1.9.3
(function() {
  var Adapter, CJSX, W, path, sourcemaps,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Adapter = require('../adapter_base');

  path = require('path');

  W = require('when');

  sourcemaps = require('../sourcemaps');

  CJSX = (function(superClass) {
    var compile;

    extend(CJSX, superClass);

    function CJSX() {
      return CJSX.__super__.constructor.apply(this, arguments);
    }

    CJSX.prototype.name = 'cjsx';

    CJSX.prototype.extensions = ['cjsx'];

    CJSX.prototype.output = 'coffee';

    CJSX.prototype.supportedEngines = ['coffee-react-transform'];

    CJSX.prototype.isolated = true;

    CJSX.prototype._render = function(str, options) {
      var filename;
      filename = options.filename;
      return compile((function(_this) {
        return function() {
          return _this.engine(str);
        };
      })(this));
    };

    compile = function(fn) {
      var err, res;
      try {
        res = fn();
      } catch (_error) {
        err = _error;
        return W.reject(err);
      }
      return W.resolve({
        result: res
      });
    };

    return CJSX;

  })(Adapter);

  module.exports = CJSX;

}).call(this);
